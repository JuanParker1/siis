{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"q",
				"qs"
			],
			[
				"__fe",
				"__fetch_assets"
			],
			[
				"__fet",
				"__fetch_assets"
			],
			[
				"margi",
				"margin_balance"
			],
			[
				"asset_",
				"asset_upnl"
			],
			[
				"mar",
				"marginBalance"
			],
			[
				"wa",
				"walletBalance"
			],
			[
				"us",
				"used_margin"
			],
			[
				"MAR",
				"MARGIN"
			],
			[
				"Kra",
				"KrakenTrader"
			],
			[
				"ORDER_TAK",
				"ORDER_TAKE_PROFIT_LIMIT"
			],
			[
				"ORDER_ST",
				"ORDER_STOP_LIMIT"
			],
			[
				"order",
				"order_book_depth"
			],
			[
				"trac",
				"traceback"
			],
			[
				"tick",
				"ticker"
			],
			[
				"ass",
				"asset_name"
			],
			[
				"asse",
				"asset_name"
			],
			[
				"_a",
				"_available_instruments"
			],
			[
				"er",
				"error_logger"
			],
			[
				"inst",
				"instruments"
			],
			[
				"mat",
				"matching_symbols"
			],
			[
				"stat",
				"status_code"
			],
			[
				"exc",
				"exchange_info"
			],
			[
				"dus",
				"dust_log"
			],
			[
				"bal",
				"balances_list"
			],
			[
				"err",
				"error"
			],
			[
				"res",
				"response"
			],
			[
				"PRI",
				"PRIVATE_API_VERSION"
			],
			[
				"pre",
				"pre_signal"
			],
			[
				"base",
				"base_tf"
			],
			[
				"tim",
				"timestamp"
			],
			[
				"sig_co",
				"sig_confirm_close_price"
			],
			[
				"close",
				"close_price"
			],
			[
				"sig_c",
				"sig_close_close_price"
			],
			[
				"sig_clo",
				"sig_close_open_price"
			],
			[
				"en",
				"entries_exits"
			],
			[
				"app",
				"app-id"
			],
			[
				"prof",
				"profit-loss"
			],
			[
				"alert",
				"alert_id"
			],
			[
				"aler",
				"alerts_config"
			],
			[
				"ne",
				"network-gain"
			],
			[
				"noti",
				"notifier_config"
			],
			[
				"AUDIO_ALERT_T",
				"AUDIO_ALERT_TRADE_WIN"
			],
			[
				"net",
				"network-loose"
			],
			[
				"cont",
				"contact-new"
			],
			[
				"stray",
				"strategy_trader"
			],
			[
				"REASON_CA",
				"REASON_CANCELED_TIMEOUT"
			],
			[
				"take",
				"take-profit"
			],
			[
				"ta",
				"take-profit"
			],
			[
				"sl_",
				"sl_mode"
			],
			[
				"notif",
				"notify_entry"
			],
			[
				"sig",
				"signal_price"
			],
			[
				"acti",
				"activity"
			],
			[
				"not",
				"notify"
			],
			[
				"times",
				"timestamp"
			],
			[
				"str",
				"strategy_trader"
			],
			[
				"stra",
				"strategy_trader"
			],
			[
				"instr",
				"instrument"
			],
			[
				"time",
				"timestamp"
			],
			[
				"sign",
				"signal"
			],
			[
				"entr",
				"entry"
			],
			[
				"ent",
				"entry"
			],
			[
				"SIGNAL_E",
				"SIGNAL_EXIT"
			],
			[
				"SIG",
				"SIGNAL_EXIT"
			],
			[
				"up",
				"upper_atr"
			],
			[
				"Stra",
				"StrategyTrade"
			],
			[
				"REASON_TAK",
				"REASON_TAKE_PROFIT_MARKET"
			],
			[
				"REASON_T",
				"REASON_TAKE_PROFIT_LIMIT"
			],
			[
				"REASON_",
				"REASON_STOP_LOSS_MARKET"
			],
			[
				"exit_",
				"exit_reason"
			],
			[
				"wo",
				"worst-timestamp"
			],
			[
				"Str",
				"StrategyTrade"
			],
			[
				"trad",
				"traders_config"
			],
			[
				"Pae",
				"PaperTrader"
			],
			[
				"_m",
				"_mutex"
			],
			[
				"in",
				"instrument"
			],
			[
				"pos",
				"position_quantity"
			],
			[
				"market_",
				"market_id"
			],
			[
				"mark",
				"market_id"
			],
			[
				"posi",
				"position_id"
			],
			[
				"market_o",
				"market_or_instrument"
			],
			[
				"error",
				"error_logger"
			],
			[
				"date",
				"datetime"
			],
			[
				"cur",
				"curr_stop_loss_price"
			],
			[
				"st",
				"stop_loss"
			],
			[
				"dyn",
				"dyn_sl"
			],
			[
				"ord",
				"order_limit"
			],
			[
				"e",
				"exit_reason"
			],
			[
				"exit",
				"exit-reason"
			],
			[
				"tae",
				"take_profit"
			],
			[
				"stop",
				"stop_loss"
			],
			[
				"upd",
				"update_sl"
			],
			[
				"last",
				"last_realized_exit_time"
			],
			[
				"tak",
				"take_profit"
			],
			[
				"HIGH",
				"HIGHLIGHT"
			],
			[
				"H",
				"HIGHLIGHT"
			],
			[
				"id",
				"id_color"
			],
			[
				"sy",
				"symbol_color"
			],
			[
				"Sig",
				"Signal"
			],
			[
				"tra",
				"trade-id"
			],
			[
				"da",
				"datetime"
			],
			[
				"si",
				"signal"
			],
			[
				"trader",
				"trader_service"
			],
			[
				"tr",
				"traders"
			],
			[
				"re",
				"reversed"
			],
			[
				"view",
				"view_service"
			],
			[
				"pro",
				"property\tNew Property"
			],
			[
				"his",
				"historical-trades"
			],
			[
				"dis",
				"disconnected"
			],
			[
				"can",
				"canceled"
			],
			[
				"orde",
				"order_id"
			],
			[
				"pric",
				"price_epsilon"
			],
			[
				"ep",
				"price_epsilon"
			],
			[
				"or",
				"orientation"
			],
			[
				"pu",
				"pullback"
			],
			[
				"_no",
				"_notifiers"
			],
			[
				"no",
				"notifier_conf"
			],
			[
				"send_t",
				"send_to_android"
			],
			[
				"_w",
				"_webhooks"
			],
			[
				"m",
				"message"
			],
			[
				"is_cl",
				"is_closing"
			],
			[
				"pap",
				"paper_mode"
			],
			[
				"creat",
				"create_oid"
			],
			[
				"create_",
				"create_order"
			],
			[
				"STATE",
				"STATE_FILLED"
			],
			[
				"crea",
				"create_order"
			],
			[
				"create_r",
				"create_ref_oid"
			],
			[
				"ref",
				"create_ref_oid"
			]
		]
	},
	"buffers":
	[
		{
			"file": "strategy/bourricot/bourricotparameters.py",
			"settings":
			{
				"buffer_size": 14159,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "strategy/bourricot/bourricotpullback.py",
			"settings":
			{
				"buffer_size": 3609,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "strategy/bourricot/pullbackppbbmax.py",
			"settings":
			{
				"buffer_size": 12613,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "strategy/bourricot/bourricotstrategytrader.py",
			"settings":
			{
				"buffer_size": 26859,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/frederic/.siis/config/appliances/binance-shit-signal.json",
			"settings":
			{
				"buffer_size": 8395,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "trader/connector/kraken/trader.py",
			"settings":
			{
				"buffer_size": 16012,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 309 files for \"Asset\" (case sensitive)\n\n/home/frederic/dev/trading/siis/common/signal.py:\n   45  \n   46  \tSIGNAL_ASSET_DATA = 600             # data is a tuple with (asset_id, asset object)\n   47: \tSIGNAL_ASSET_DATA_BULK = 601        # data is an array of Asset objects\n   48  \tSIGNAL_ASSET_UPDATED = 602          # data is a tuple with (asset_id, locked_balance, free_balance)\n   49  \n\n/home/frederic/dev/trading/siis/connector/binance/client.py:\n  300                          \"symbol\": \"ETHBTC\",\n  301                          \"status\": \"TRADING\",\n  302:                         \"baseAsset\": \"ETH\",\n  303:                         \"baseAssetPrecision\": 8,\n  304:                         \"quoteAsset\": \"BTC\",\n  305                          \"quotePrecision\": 8,\n  306                          \"orderTypes\": [\"LIMIT\", \"MARKET\"],\n  ...\n  345                  \"symbol\": \"ETHBTC\",\n  346                  \"status\": \"TRADING\",\n  347:                 \"baseAsset\": \"ETH\",\n  348:                 \"baseAssetPrecision\": 8,\n  349:                 \"quoteAsset\": \"BTC\",\n  350                  \"quotePrecision\": 8,\n  351                  \"orderTypes\": [\"LIMIT\", \"MARKET\"],\n  ...\n 1152                          \"qty\": \"1.00000000\",\n 1153                          \"commission\": \"4.00000000\",\n 1154:                         \"commissionAsset\": \"USDT\"\n 1155                      },\n 1156                      {\n ....\n 1158                          \"qty\": \"5.00000000\",\n 1159                          \"commission\": \"19.99500000\",\n 1160:                         \"commissionAsset\": \"USDT\"\n 1161                      },\n 1162                      {\n ....\n 1164                          \"qty\": \"2.00000000\",\n 1165                          \"commission\": \"7.99600000\",\n 1166:                         \"commissionAsset\": \"USDT\"\n 1167                      },\n 1168                      {\n ....\n 1170                          \"qty\": \"1.00000000\",\n 1171                          \"commission\": \"3.99700000\",\n 1172:                         \"commissionAsset\": \"USDT\"\n 1173                      },\n 1174                      {\n ....\n 1176                          \"qty\": \"1.00000000\",\n 1177                          \"commission\": \"3.99500000\",\n 1178:                         \"commissionAsset\": \"USDT\"\n 1179                      }\n 1180                  ]\n ....\n 1655                      \"qty\": \"12.00000000\",\n 1656                      \"commission\": \"10.10000000\",\n 1657:                     \"commissionAsset\": \"BNB\",\n 1658                      \"time\": 1499865549590,\n 1659                      \"isBuyer\": true,\n ....\n 1744                                      \"operateTime\": \"2018-05-03 17:07:04\",\n 1745                                      \"transferedAmount\": \"0.000441\",\n 1746:                                     \"fromAsset\": \"USDT\"\n 1747                                  },\n 1748                                  {\n ....\n 1753                                      \"operateTime\": \"2018-05-03 17:07:04\",\n 1754                                      \"transferedAmount\": \"0.00088156\",\n 1755:                                     \"fromAsset\": \"ETH\"\n 1756                                  }\n 1757                              ],\n ....\n 1770                                      \"operateTime\": \"2018-05-02 13:52:24\",\n 1771                                      \"transferedAmount\": \"0.00049\",\n 1772:                                     \"fromAsset\": \"USDT\"\n 1773                                  },\n 1774                                  {\n ....\n 1779                                      \"operateTime\": \"2018-05-02 13:51:11\",\n 1780                                      \"transferedAmount\": \"0.00009795\",\n 1781:                                     \"fromAsset\": \"ETH\"\n 1782                                  }\n 1783                              ],\n ....\n 1791  \n 1792          \"\"\"\n 1793:         res = self._request_withdraw_api('get', 'userAssetDribbletLog.html', True, data=params)\n 1794          if not res['success']:\n 1795              raise BinanceWithdrawException(res['msg'])\n\n/home/frederic/dev/trading/siis/connector/kraken/connector.py:\n  129  \n  130      def instruments(self):\n  131:         data = self.query_public('AssetPairs')\n  132  \n  133          if not data:\n  ...\n  144  \n  145      def assets(self):\n  146:         data = self.query_public('Assets')\n  147  \n  148          if not data:\n\n/home/frederic/dev/trading/siis/database/database.py:\n   17  \n   18  from trader.market import Market\n   19: from trader.asset import Asset\n   20  \n   21  from config import utils\n\n/home/frederic/dev/trading/siis/database/mysql.py:\n   18  \n   19  from trader.market import Market\n   20: from trader.asset import Asset\n   21  \n   22  from .tickstorage import TickStorage, TickStreamer\n   ..\n  408  \n  409                      for row in rows:\n  410:                         asset = Asset(ua[1], row[0])\n  411  \n  412                          # only a sync will tell which quantity is free, which one is locked\n\n/home/frederic/dev/trading/siis/database/pgsql.py:\n   20  \n   21  from trader.market import Market\n   22: from trader.asset import Asset\n   23  \n   24  from .tickstorage import TickStorage, TickStreamer\n   ..\n  427  \n  428                      for row in rows:\n  429:                         asset = Asset(ua[1], row[0])\n  430  \n  431                          # only a sync will tell which quantity is free, which one is locked\n\n/home/frederic/dev/trading/siis/strategy/strategy.py:\n   27  from trader.order import Order\n   28  \n   29: from strategy.strategyassettrade import StrategyAssetTrade\n   30  from strategy.strategymargintrade import StrategyMarginTrade\n   31  from strategy.strategypositiontrade import StrategyPositionTrade\n   ..\n 1912          if strategy_trader.instrument.has_spot and not margin_trade:\n 1913              # market support spot and margin option is not defined\n 1914:             trade = StrategyAssetTrade(timeframe)\n 1915  \n 1916              # ajust max quantity according to free asset of quote, and convert in asset base quantity\n ....\n 2254              return results\n 2255  \n 2256:         trade = StrategyAssetTrade(timeframe)\n 2257  \n 2258          # user managed trade\n 2259          trade.set_user_trade()\n 2260  \n 2261:         trade._entry_state = StrategyAssetTrade.STATE_FILLED\n 2262:         trade._exit_state = StrategyAssetTrade.STATE_NEW\n 2263          \n 2264          trade.dir = Order.LONG\n\n/home/frederic/dev/trading/siis/strategy/strategyassettrade.py:\n   15  \n   16  \n   17: class StrategyAssetTrade(StrategyTrade):\n   18      \"\"\"\n   19      Specialization for asset buy/sell trading.\n\n/home/frederic/dev/trading/siis/strategy/strategytrader.py:\n   10  from datetime import datetime\n   11  \n   12: from strategy.strategyassettrade import StrategyAssetTrade\n   13  from strategy.strategyindmargintrade import StrategyIndMarginTrade\n   14  from strategy.strategymargintrade import StrategyMarginTrade\n   ..\n  211  \n  212          if trade_type == StrategyTrade.TRADE_BUY_SELL:\n  213:             trade = StrategyAssetTrade(0)\n  214          elif trade_type == StrategyTrade.TRADE_MARGIN:\n  215              trade = StrategyMarginTrade(0)\n\n/home/frederic/dev/trading/siis/strategy/bourricot/bourricotstrategytrader.py:\n    9  from trader.order import Order\n   10  \n   11: from strategy.strategyassettrade import StrategyAssetTrade\n   12  from strategy.strategyindmargintrade import StrategyIndMarginTrade\n   13  from strategy.strategymargintrade import StrategyMarginTrade\n   ..\n  123          if not self.trade_clazz:\n  124              if self.market_type == Instrument.TRADE_SPOT and self.instrument.has_spot:\n  125:                 self.trade_clazz = StrategyAssetTrade\n  126                  self.trade_short = False\n  127                  logger.info(\"Market type using asset trade for %s\" % self.instrument.market_id)\n\n/home/frederic/dev/trading/siis/strategy/cryptoalpha/castrategytrader.py:\n   10  \n   11  from strategy.timeframebasedstrategytrader import TimeframeBasedStrategyTrader\n   12: from strategy.strategyassettrade import StrategyAssetTrade\n   13  from strategy.strategysignal import StrategySignal\n   14  \n   ..\n  477  \n  478          if do_order:\n  479:             trade = StrategyAssetTrade(timeframe)\n  480  \n  481              # the new trade must be in the trades list if the event comes before, and removed after only it failed\n\n/home/frederic/dev/trading/siis/trader/asset.py:\n    9  \n   10  \n   11: class Asset(object):\n   12      \"\"\"\n   13:     Asset define a symbol and a balance, with margin or not. It is initially created for\n   14      use with binance.com but will be extended to any balance even for EUR or USD margin based broker,\n   15      in such we would check the asset balance before opening a position.\n\n/home/frederic/dev/trading/siis/trader/trader.py:\n 1013          Returns a table of any non empty assets.\n 1014          \"\"\"\n 1015:         columns = ('Asset', 'Locked', 'Free', 'Total', 'Avg price', 'Change', 'Change %',\n 1016                  'P/L %s' % self.account.currency, 'P/L %s' % self.account.alt_currency)\n 1017          total_size = (len(columns), 0)\n ....\n 1103          Returns a table of any followed markets.\n 1104          \"\"\"\n 1105:         columns = ('Broker', 'Account', 'Username', 'Email', 'Asset', 'Free Asset', 'Balance', 'Margin', 'Level', 'Net worth',\n 1106:                    'Risk limit', 'Unrealized P/L', 'Asset U. P/L', 'Asset U. P/L alt')\n 1107          data = []\n 1108  \n\n/home/frederic/dev/trading/siis/trader/connector/binance/trader.py:\n   14  from .account import BinanceAccount\n   15  \n   16: from trader.asset import Asset\n   17  from trader.position import Position\n   18  from trader.order import Order\n   ..\n  104                  symbols = self._watcher.connector.client.get_exchange_info()\n  105                  for symbol in symbols['symbols']:\n  106:                     if symbol['quoteAsset'] not in self._quotes:\n  107:                         self._quotes.append(symbol['quoteAsset'])\n  108  \n  109                  # and add any asset of the balance\n  ...\n  447          Fetch recent asset and update the average unit price per asset and set it into positions.\n  448  \n  449:         @note Asset must be fetch before from DB if existings.\n  450          \"\"\"\n  451          query_time = time.time()\n  ...\n  469              # for k, symbol in exchange_info.get('symbols', {}).items():\n  470              # store asset precisions\n  471:             symbols[symbol['baseAsset']] = {\n  472:                 'precision': symbol['baseAssetPrecision']\n  473              }\n  474:             symbols[symbol['quoteAsset']] = {\n  475                  'precision': symbol['quotePrecision']\n  476              }\n  ...\n  531                  # for dust in dust_log:\n  532                  #   for log in dust['logs']:\n  533:                 #       if log['fromAsset'] == asset_name:\n  534                  #           time = 0  # 'operateTime': '2018-10-08 20:11:18' @todo is UTC or LOCAL ? ...\n  535                  #           if time > last_update_time:  # strictly greater than\n  ...\n  577                              fee = 0.0\n  578                              # @todo compute withdraw fee\n  579:                             # fee = symbols[symbol['baseAsset']]['']\n  580  \n  581                              balance['trades'].append({\n  ...\n  610                              if timestamp >= last_update_time and trade['id'] > last_trade_id:\n  611                                  # compute the prefered quote-price\n  612:                                 quote_base = market['quoteAsset']\n  613:                                 quote_quote = market['quoteAsset']\n  614                                  quote_price = 1.0\n  615  \n  ...\n  641                                  # fee asset trade\n  642                                  if trade['commission']:\n  643:                                     fee_asset = trade['commissionAsset']\n  644                                      fee_quote = balances[fee_asset]['quote']\n  645  \n  ...\n  776              return self._assets[asset_name]\n  777  \n  778:         asset = Asset(self, asset_name, precision)\n  779          self._assets[asset_name] = asset\n  780  \n\n/home/frederic/dev/trading/siis/trader/connector/kraken/trader.py:\n   22  from trader.position import Position\n   23  from trader.order import Order\n   24: from trader.asset import Asset\n   25  \n   26  from connector.kraken.connector import Connector\n   ..\n  401              return self._assets[asset_name]\n  402  \n  403:         asset = Asset(self, asset_name, precision)\n  404          self._assets[asset_name] = asset\n  405  \n\n/home/frederic/dev/trading/siis/trader/connector/papertrader/papertraderspot.py:\n   10  from trader.position import Position\n   11  from trader.order import Order\n   12: from trader.asset import Asset\n   13  \n   14  import logging\n   ..\n   20          return trader._assets[asset_name]\n   21  \n   22:     asset = Asset(trader, asset_name, precision)\n   23      asset.quote = trader._account.currency\n   24  \n\n/home/frederic/dev/trading/siis/trader/connector/papertrader/trader.py:\n   18  from .account import PaperTraderAccount\n   19  from terminal.terminal import Terminal\n   20: from trader.asset import Asset\n   21  from trader.order import Order\n   22  from trader.position import Position\n   ..\n  468  \n  469      def create_asset(self, asset_name, quantity, price, quote, precision=8):\n  470:         asset = Asset(self, asset_name, precision)\n  471          asset.set_quantity(0, quantity)\n  472          asset.update_price(datetime.now(), 0, price, quote)\n\n/home/frederic/dev/trading/siis/view/assetview.py:\n    2  # @author Frederic SCHERMA\n    3  # @license Copyright (c) 2019 Dream Overflow\n    4: # Asset view.\n    5  \n    6  from terminal.terminal import Terminal\n    .\n   11  \n   12  \n   13: class AssetView(TableView):\n   14      \"\"\"\n   15:     Asset view.\n   16      \"\"\"\n   17  \n   ..\n   43                  error_logger.error(str(e))\n   44  \n   45:             self.set_title(\"Asset list (%i) trader %s on account %s\" % (num, trader.name, trader.account.name))\n   46          else:\n   47:             self.set_title(\"Asset list - No configured trader\")\n   48  \n\n/home/frederic/dev/trading/siis/view/defaultviews.py:\n   54  \n   55      # 'asset'\n   56:     from view.assetview import AssetView\n   57:     asset = AssetView(view_service, trader_service)\n   58      view_service.add_view(asset)\n   59  \n   60      # # 'orderbook'\n   61      # from view.orderbookview import OrderBookView\n   62:     # orderbook = AssetView(view_service, trader_service)\n   63      # view_service.add_view(orderbook)\n   64  \n\n/home/frederic/dev/trading/siis/watcher/connector/binance/watcher.py:\n  319              market.expiry = '-'\n  320  \n  321:             base_asset = symbol['baseAsset']\n  322:             market.set_base(base_asset, base_asset, symbol['baseAssetPrecision'])\n  323  \n  324:             quote_asset = symbol['quoteAsset']\n  325:             market.set_quote(quote_asset, symbol.get('quoteAssetUnit', quote_asset), symbol['quotePrecision'])\n  326  \n  327              # tick size at the base asset precision\n  328:             market.one_pip_means = math.pow(10.0, -symbol['baseAssetPrecision'])\n  329              market.value_per_pip = 1.0\n  330              market.contract_size = 1.0\n\n76 matches across 20 files\n\n\nSearching 309 files for \".assets(\" (case sensitive)\n\n/home/frederic/dev/trading/siis/watcher/connector/kraken/watcher.py:\n  103                          #\n  104  \n  105:                         self._assets = self._connector.assets()\n  106  \n  107                          for asset_name, details in self._assets.items():\n  ...\n  460          self._size_limits = self.service.watcher_config(self._name).get(\"size-limits\", {})\n  461  \n  462:         self._assets = self._connector.assets()\n  463          self._instruments = self._connector.instruments()\n  464  \n\n2 matches in 1 file\n\n\nSearching 309 files for \".account_id\" (case sensitive)\n\n/home/frederic/dev/trading/siis/trader/connector/binance/account.py:\n   51          if time.time() - self._last_update >= 1.0:\n   52              # its all what we have... nothing just our internal mapping\n   53:             self._name = connector.account_id\n   54  \n   55              # recompute the balance and free margin for each non-zero account balance\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 16430,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "trader/connector/binance/trader.py",
			"settings":
			{
				"buffer_size": 47412,
				"line_ending": "Unix"
			}
		},
		{
			"file": "watcher/connector/kraken/watcher.py",
			"settings":
			{
				"buffer_size": 22751,
				"line_ending": "Unix"
			}
		},
		{
			"file": "strategy/bourricot/bourricotatrsr.py",
			"settings":
			{
				"buffer_size": 1060,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/frederic/.siis/config/appliances/binance-bourricot-backtesting.json",
			"settings":
			{
				"buffer_size": 8372,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/frederic/.siis/config/appliances/kraken-eur-margin.json",
			"settings":
			{
				"buffer_size": 8738,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "strategy/strategytrade.py",
			"settings":
			{
				"buffer_size": 36342,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/frederic/.siis/config/appliances/app-histdata-dax30-v01.json",
			"settings":
			{
				"buffer_size": 7755,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/frederic/.siis/config/appliances/app-ig-dax30-v01.json",
			"settings":
			{
				"buffer_size": 7700,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 32.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"gi",
				"Git: Commit"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git puh",
				"Git: Push"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"erro",
				"Anaconda: Show error list"
			],
			[
				"git ad",
				"Git: Add..."
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"git tag",
				"Git: New Tag"
			],
			[
				"git psu",
				"Git: Push"
			],
			[
				"err",
				"Anaconda: Show error list"
			],
			[
				"requi",
				"Set Syntax: requirements.txt"
			],
			[
				"python",
				"Build With: Python"
			],
			[
				"run",
				"Anaconda: Run Current Test"
			],
			[
				"git",
				"Git: Diff Current File"
			],
			[
				"git ",
				"Git: Commit"
			],
			[
				"synta re",
				"Set Syntax: reStructuredText Improved"
			],
			[
				"restr",
				"Set Syntax: reStructuredText Improved"
			],
			[
				"rest",
				"Set Syntax: reStructuredText Improved"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"git g",
				"GitGutter: Compare Against HEAD"
			],
			[
				"git gu",
				"GitGutter: Compare Against Branch"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"emmet",
				"Emmet: Split\\Join Tag"
			],
			[
				"emme",
				"Emmet: Go to Matching Pair"
			],
			[
				"syn ht",
				"Set Syntax: HTML"
			],
			[
				"emmet ",
				"Set Syntax: Emmet"
			],
			[
				"packag ds",
				"Package Control: Disable Package"
			],
			[
				"pack en",
				"Package Control: Enable Package"
			],
			[
				"req",
				"requirements.txt: Clear Cache"
			],
			[
				"pack ins",
				"Package Control: Install Package"
			],
			[
				"pack up",
				"Package Control: Upgrade Package"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"ana",
				"Anaconda: Show error list"
			],
			[
				"ana got",
				"Anaconda: Goto object definition"
			],
			[
				"an goto",
				"Anaconda: Goto object definition"
			],
			[
				"got",
				"Emmet: Go to Matching Pair"
			],
			[
				"find",
				"Anaconda: Find object usage"
			],
			[
				"packa en",
				"Package Control: Enable Package"
			],
			[
				"package dis",
				"Package Control: Disable Package"
			],
			[
				"pack e",
				"Package Control: Enable Package"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"error",
				"Anaconda: Show error list"
			],
			[
				"git diff",
				"Git: Diff Tool Current File"
			],
			[
				"pack lis",
				"Package Control: List Packages"
			],
			[
				"git dif",
				"Git: Diff Current File"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"build",
				"Build With: Python"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"render",
				"Preferences: Key Bindings - User"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"er",
				"Anaconda: Show error list"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"id",
				"Indentation: Reindent Lines"
			],
			[
				"iden",
				"Indentation: Reindent Lines"
			],
			[
				"git a",
				"Git: Add..."
			],
			[
				"git his",
				"Git: Diff Current File (Ignore Whitespace)"
			],
			[
				"tab",
				"Indentation: Convert to Tabs"
			],
			[
				"GIT AD",
				"Git: Add..."
			],
			[
				":empty",
				"Snippet: for... empty..."
			],
			[
				"gi add",
				"Git: Add..."
			],
			[
				"terl",
				"TernJS: Rename variable"
			],
			[
				"tern",
				"TernJS: Reload"
			],
			[
				"js",
				"TernJS: Next Occurance"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				":w",
				":w - Save"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"count",
				"Code Folding: Fold Tag Attributes"
			],
			[
				"git push ",
				"Git: Push"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remvoe",
				"Package Control: Remove Package"
			],
			[
				"table",
				"Table Editor: Disable 'align_number_right' for current view"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"git commit ",
				"Git: Commit"
			],
			[
				"git add ",
				"Git: Add..."
			],
			[
				":set ",
				"Preferences: Settings - Default"
			],
			[
				"pep8",
				"Snippet: coding: utf-8"
			],
			[
				"spac",
				"Indentation: Convert to Spaces"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"commit",
				"Git: Commit history"
			],
			[
				"djan",
				"Set Syntax: HTML (Django)"
			],
			[
				"gitg",
				"GitGutter: Compare Against Branch"
			],
			[
				"html",
				"Set Syntax: HTML (Django)"
			],
			[
				"inden",
				"Indentation: Reindent Lines"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"con",
				"Indentation: Convert to Spaces"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ident",
				"SublimeCodeIntel: Reset"
			],
			[
				"inde",
				"Indentation: Reindent Lines"
			],
			[
				"intel",
				"SublimeCodeIntel: Reset"
			],
			[
				"intell",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"Package Control: i",
				"Package Control: Discover Packages"
			],
			[
				"Intel",
				"Package Control: Install Package"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 410.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/frederic/dev/trading/siis",
		"/home/frederic/dev/trading/siis/connector",
		"/home/frederic/dev/trading/siis/connector/kraken",
		"/home/frederic/dev/trading/siis/strategy",
		"/home/frederic/dev/trading/siis/strategy/bourricot"
	],
	"file_history":
	[
		"/home/frederic/.siis/config/identities.json",
		"/home/frederic/dev/trading/siis/trader/connector/binance/account.py",
		"/home/frederic/dev/trading/siis/trader/connector/bitmex/account.py",
		"/home/frederic/dev/trading/siis/trader/asset.py",
		"/home/frederic/dev/trading/siis/watcher/connector/binance/watcher.py",
		"/home/frederic/dev/trading/siis/watcher/connector/kraken/watcher.py",
		"/home/frederic/dev/trading/siis/connector/kraken/connector.py",
		"/home/frederic/dev/trading/siis/config/watchers/kraken.com.json",
		"/home/frederic/dev/trading/siis/strategy/strategy.py",
		"/home/frederic/dev/trading/siis/trader/connector/kraken/account.py",
		"/home/frederic/dev/trading/siis/trader/trader.py",
		"/home/frederic/dev/trading/siis/trader/account.py",
		"/home/frederic/dev/trading/siis/trader/connector/ig/account.py",
		"/home/frederic/dev/trading/siis/trader/connector/ig/trader.py",
		"/home/frederic/dev/trading/siis/watcher/connector/ig/watcher.py",
		"/home/frederic/dev/trading/siis/common/signal.py",
		"/home/frederic/dev/trading/siis/view/signalview.py",
		"/home/frederic/dev/trading/siis/trader/connector/binance/trader.py",
		"/home/frederic/dev/trading/siis/connector/binance/client.py",
		"/home/frederic/dev/trading/siis/strategy/strategytrader.py",
		"/home/frederic/dev/trading/siis/trader/connector/bitmex/trader.py",
		"/home/frederic/dev/trading/siis/trader/order.py",
		"/home/frederic/dev/trading/siis/watcher/connector/bitmex/watcher.py",
		"/home/frederic/dev/trading/siis/watcher/watcher.py",
		"/home/frederic/dev/trading/siis/app/tradingcommands.py",
		"/home/frederic/dev/trading/siis/strategy/strategyassettrade.py",
		"/home/frederic/dev/trading/siis/trader/market.py",
		"/home/frederic/dev/trading/siis/common/utils.py",
		"/home/frederic/dev/trading/siis/watcher/fetcher.py",
		"/home/frederic/dev/trading/siis/watcher/connector/tradingview/watcher.py",
		"/home/frederic/dev/trading/siis/watcher/connector/tiingo/watcher.py",
		"/home/frederic/dev/trading/siis/terminal/terminal.py",
		"/home/frederic/dev/trading/siis/strategy/service.py",
		"/home/frederic/dev/trading/siis/notifier/service.py",
		"/home/frederic/dev/trading/siis/common/runnable.py",
		"/home/frederic/dev/trading/siis/view/service.py",
		"/home/frederic/dev/trading/siis/trader/service.py",
		"/home/frederic/dev/trading/siis/watcher/service.py",
		"/home/frederic/dev/trading/siis/common/signalhandler.py",
		"/home/frederic/dev/trading/siis/common/service.py",
		"/home/frederic/dev/trading/siis/trader/connector/kraken/trader.py",
		"/home/frederic/.siis/config/profiles/kraken-eur-margin.json",
		"/home/frederic/.siis/config/profiles/binance-shit-signal.json",
		"/home/frederic/dev/trading/siis/terminal/command.py",
		"/home/frederic/dev/trading/siis/trader/connector/papertrader/trader.py",
		"/home/frederic/dev/trading/siis/database/database.py",
		"/home/frederic/dev/trading/siis/config/databases.json",
		"/home/frederic/dev/trading/siis/connector/binance/connector.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotstrategy.py",
		"/home/frederic/dev/trading/siis/strategy/strategysignal.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotpullbackdispatcher.py",
		"/home/frederic/dev/trading/siis/common/siislog.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotsuba.py",
		"/home/frederic/dev/trading/siis/view/tradehistoryview.py",
		"/home/frederic/dev/trading/siis/notifier/desktop/desktopnotifier.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotstoploss.py",
		"/home/frederic/dev/trading/siis/strategy/indicator/atrsr/atrsr.py",
		"/home/frederic/dev/trading/siis/notifier/discord/discordnotifier.py",
		"/home/frederic/dev/trading/siis/notifier/android/androidnotifier.py",
		"/home/frederic/dev/trading/siis/strategy/strategytrade.py",
		"/home/frederic/dev/trading/siis/terminal/charmap.py",
		"/home/frederic/dev/trading/siis/siis.py",
		"/home/frederic/dev/trading/siis/config/notifiers/android.json",
		"/home/frederic/dev/trading/siis/config/notifiers/desktop.json",
		"/home/frederic/dev/trading/siis/strategy/refuel/refuelstrategytrader.py",
		"/home/frederic/dev/trading/siis/strategy/forexalpha/fastrategytrader.py",
		"/home/frederic/dev/trading/siis/strategy/cryptoalpha/castrategytrader.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotstrategytrader.py",
		"/home/frederic/dev/trading/siis/strategy/bitcoinalpha/bcastrategytrader.py",
		"/home/frederic/dev/trading/siis/strategy/strategypositiontrade.py",
		"/home/frederic/dev/trading/siis/strategy/strategymargintrade.py",
		"/home/frederic/dev/trading/siis/strategy/strategyindmargintrade.py",
		"/home/frederic/dev/trading/siis/doc/indicator.md",
		"/home/frederic/dev/trading/siis/strategy/crystalball/cbstrategytrader.py",
		"/home/frederic/dev/trading/siis/strategy/timeframebasedstrategytrader.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricottakeprofit.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotatrsr.py",
		"/home/frederic/dev/trading/siis/strategy/indicator/atr/atr.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotconfig.py",
		"/home/frederic/dev/trading/siis/trader/connector/papertrader/papertraderspot.py",
		"/home/frederic/dev/trading/siis/trader/connector/papertrader/papertraderposition.py",
		"/home/frederic/.siis/config/profiles/prof-histdata-dax30-v01.json",
		"/home/frederic/dev/trading/siis/instrument/instrument.py",
		"/home/frederic/dev/trading/siis/trader/position.py",
		"/home/frederic/dev/trading/siis/view/tickerview.py",
		"/home/frederic/dev/trading/siis/view/accountview.py",
		"/home/frederic/dev/trading/siis/view/orderview.py",
		"/home/frederic/dev/trading/siis/config/strategies.json",
		"/home/frederic/dev/trading/siis/monitor/service.py",
		"/home/frederic/dev/trading/siis/trader/connector/papertrader/papertraderindmargin.py",
		"/home/frederic/dev/trading/siis/trader/connector/papertrader/papertradermargin.py",
		"/home/frederic/dev/trading/siis/connector/ig/rest.py",
		"/home/frederic/dev/trading/siis/watcher/position.py",
		"/home/frederic/dev/trading/siis/watcher/connector/siis/ohlc.py",
		"/home/frederic/dev/trading/siis/watcher/connector/siis/price.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/pullbackppbbmax.py",
		"/home/frederic/dev/trading/siis/trader/connector/papertrader/papertraderhistory.py",
		"/home/frederic/dev/trading/siis/config/traders/kraken.com.json",
		"/home/frederic/dev/trading/siis/config/traders/histdata.com.json",
		"/home/frederic/dev/trading/siis/config/traders/bitmex.com.json",
		"/home/frederic/dev/trading/siis/config/traders/binance.com.json",
		"/home/frederic/dev/trading/siis/config/traders/ig.com.json",
		"/home/frederic/dev/trading/siis/README.md",
		"/home/frederic/dev/trading/siis/strategy/boostedblueskyday/bbstrategy.py",
		"/home/frederic/dev/trading/siis/trader/connector/onebroker/trader.py",
		"/home/frederic/dev/trading/siis/view/tradeview.py",
		"/home/frederic/dev/trading/siis/notifier/notifier.py",
		"/home/frederic/dev/trading/siis/config/watchers/tradingview.com.json",
		"/home/frederic/dev/trading/siis/view/view.py",
		"/home/frederic/dev/trading/siis/app/help.py",
		"/home/frederic/dev/trading/siis/view/aggtradeview.py",
		"/home/frederic/dev/trading/siis/view/marketview.py",
		"/home/frederic/dev/trading/siis/view/positionview.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotparameters.py",
		"/home/frederic/dev/trading/siis/view/defaultviews.py",
		"/home/frederic/dev/trading/siis/view/assetview.py",
		"/home/frederic/dev/trading/siis/view/tableview.py",
		"/home/frederic/dev/trading/siis/deps/ta-lib/src/ta_abstract/tables/table_v.c",
		"/home/frederic/dev/trading/siis/view/textview.py",
		"/home/frederic/dev/trading/siis/common/baseservice.py",
		"/home/frederic/dev/trading/siis/deps/ta-lib/configure",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotsubc.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotsub.py",
		"/home/frederic/dev/trading/siis/strategy/bourricot/bourricotsubb.py",
		"/home/frederic/dev/trading/siis/common/watchdog.py",
		"/home/frederic/dev/trading/siis/notifier/notifierexception.py",
		"/home/frederic/dev/trading/siis/notifier/android/androidpush.py",
		"/home/frederic/dev/trading/siis/config/watchers/ig.com.json"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 143.0,
		"where_history":
		[
			"*.py",
			"",
			"*.py",
			"",
			"*.js",
			"*.py",
			"",
			"*.js",
			"",
			"*.py",
			"",
			"*.py",
			"",
			"*.py",
			"*.html",
			"*.py",
			"*.html",
			"*.py",
			"*.*",
			"*.html",
			"*.js",
			"*.py",
			"*.html",
			"",
			"*.html",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			".account_id",
			"__get_or_add_asset",
			"__get_or_add_asset\n",
			"markets_id",
			"self._assets",
			".assets()",
			".assets(",
			"Asset",
			"Assets",
			"precision",
			"__get_or_add_asset",
			"decimals",
			"__get_or_add_asset(",
			"self._markets",
			"self._quotes",
			"_quotes",
			"DASH",
			"_quotes",
			"add_asset",
			"get_asset",
			"REST_OR_WS",
			"__fetch_assets",
			"__fetch_account",
			"__fetch_assets",
			"get_balances",
			"Balance",
			"self._currency_ratio",
			"currency_ratio",
			"curre",
			".currency_ratio",
			"margin_",
			"account.upd",
			"balance",
			"'balance'",
			"\"balance\"",
			"'balance'",
			"('balance'",
			"balance",
			"'balance'",
			"account",
			"_risk_limit",
			"risk_limit",
			"asset_balance",
			"_asset_balance",
			"get_balances",
			"'Balance'",
			"client.create_order(",
			"remove(",
			".remove(",
			"position_id",
			"datetim",
			"EGeneral",
			".order_id",
			"ref_order_id",
			"post_",
			"uuid",
			"connector.",
			".connector.",
			"r.connector.",
			"r.connector",
			"create_order",
			"__on_depth_data",
			"def subscribe(self,",
			"contract_size",
			"BASE_QUOTE",
			"backtrace",
			"backtrace_",
			"backtra",
			"traceback.",
			"fetch_orde",
			"'quantity'",
			"order.quantity = ",
			"_last_tick",
			"._last_tick",
			"self._last_tick",
			"_last_tick",
			"self._last_tick",
			"with self._mutex",
			"with sel",
			"lock",
			"with sel",
			"lock",
			"notify(",
			"has_market(",
			"has_market",
			"_mutex",
			".asset(",
			"self._mutex",
			"lock()",
			".lock()",
			"._mutex.lock",
			"._mutex.acquir",
			"._mutex",
			"_mutex.lock()",
			"._mutex.lock()",
			"market_id",
			"mutex",
			"lock(",
			"lock",
			"on_assets_loaded",
			"on_assets_",
			"on_asset_",
			"on_asset_load",
			"withdraw",
			"with",
			"withdra",
			".has_market",
			"has_ma",
			"cmd_trade_clean",
			"COMMAND_TRADE_CLEAN",
			"COMMAND_TRADE_EXIT",
			"order",
			"COMMAND_TRADE_EXIT",
			"cmd_trade_exit",
			"order.",
			"order =",
			"order",
			"order ",
			"order",
			"def receiver(self, signal):",
			"def has_market",
			"lock(",
			"lock",
			"acqui",
			"def receiver(self, signal):",
			"receiver(",
			".lock(",
			"mutex.lock("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"base_tf",
			"[\"",
			"\"",
			"method",
			"\"depth\": 2",
			"\"depth\": 4",
			"\"depth\": 2",
			"key ==",
			"_signals_opts",
			"timeframe.",
			"data",
			"timeframe.",
			"pullback.take_profit.timeframe.",
			"pullback.take_profit.distance",
			"method",
			"strategy_trader",
			"integrate",
			"ORIENTATION_",
			"ORIENTATION",
			"PRICE_",
			"st",
			"timestamps",
			"position",
			"trader.",
			"exec_indmargin_order(self, ",
			"exec_margin_order(self, ",
			"exec_buysell_order(self, ",
			"trader.",
			"base.get(",
			"in orders",
			"base.",
			"\"",
			"\": {0}",
			"\": ",
			"\": {\"",
			"\", \"",
			"min-size",
			"\"",
			"        'options': {}",
			"\"",
			"",
			",",
			"\"",
			"'options': {}",
			"\"",
			"n",
			"empty(0)",
			"78",
			"Instrument.TF_1D",
			"self.entry_oid",
			"self.entry_ref_oid",
			"logger.",
			"strategy_trader",
			"'atr': ('atr', 14, 1.5),",
			"'pivotpoint': ('pivotpoint', 0,),",
			"'atr': ('atr', 14, 3.0),",
			"'bbawe': ('bbawe', 20, 2.0, 3.0, 5, 34, False),",
			": 38,",
			"'price': ('price', 2,),",
			"ema': ('ema', 8,),",
			"#             'timeframe': ",
			"'timeframe': ",
			"'pivotpoint': ('pivotpoint', 5,),",
			"'ema': ('ema', 3,),",
			"'ema': ('ema', 8,),",
			"'pivotpoint': ('pivotpoint', 3,),",
			"'bollingerbands': ('bollingerbands', 36,),",
			"'bollingerbands': None, # ('bollingerbands', 36,),",
			"'bollingerbands': ('bollingerbands', 36,),",
			"'rsi': ('rsi', 14,),",
			"'ema': ('ema', 5,),",
			"'ema': ('ema', 8,),",
			"'bollingerbands': ('bollingerbands', 21,),",
			"'pivotpoint': ('pivotpoint', 5,),",
			"'ema': ('ema', 10,),",
			"'pivotpoint': ('pivotpoint', 3,),",
			"'pivotpoint': ('pivotpoint', 0,),",
			"_last_ohlcs",
			"_last_ohlc",
			")",
			"http://127.0.0.1:8000",
			"http://127.0.0.1",
			"\\),",
			"INSERT IGNORE ",
			" TRUE,",
			" FALSE,",
			"FALSE,",
			"ezpiclient",
			"TRUE,",
			"FALSE,",
			"",
			"doc",
			", ",
			"(",
			"    VALUES('",
			"VALUES('",
			"'UMR 1095 : GDEC/Génétique Diversité et Ecophysiologie des Céréales (INRA), Centre de recherche de Clermont-Ferrand-Theix, France'",
			"('$2', '$1', '$4', '$3', '$5'),",
			"('$2', '$1', '$4', '$3', '$5'},",
			"{'last_name': '$1', first_name: '$2', team: '$3', email: '$4'},",
			"\n            ",
			"ezpoai.",
			"span.",
			": Element.",
			"'},",
			"    '},",
			"    {'",
			"0",
			"    'id': $1, 'name': $3, 'parent_id': $2, 'color': $4,",
			"    'id': $1, 'name': $2, 'parent_id': 'NULL', 'color': $3,",
			"    'id': $0, 'name': $1, 'parent_id': 'NULL', 'color': $2,",
			"    'id': $1, 'name': $2, 'parent_id': 'NULL', 'color': $3,",
			"    'id': $(1), 'name': $(2), 'parent_id': 'NULL', 'color': $(3),",
			"    'id': %1, 'name': %2, 'parent_id': 'NULL', 'color': %3,",
			")",
			"dlg_offset_position",
			"tmp",
			", '000000'),",
			" , '000000'),",
			"'",
			"'%s'",
			"",
			"),",
			"(2000+$1, ?, \"$2\")",
			"(1000+$1, $2, \"$3\")",
			"($1, \"$2\")",
			"{{STATIC_URL}}",
			"^"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "strategy/bourricot/bourricotparameters.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14159,
						"regions":
						{
						},
						"selection":
						[
							[
								1218,
								1218
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "strategy/bourricot/bourricotpullback.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3609,
						"regions":
						{
						},
						"selection":
						[
							[
								3439,
								3439
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 951.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "strategy/bourricot/pullbackppbbmax.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12613,
						"regions":
						{
						},
						"selection":
						[
							[
								4562,
								4562
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 825.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "strategy/bourricot/bourricotstrategytrader.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26859,
						"regions":
						{
						},
						"selection":
						[
							[
								13726,
								13726
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4332.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/frederic/.siis/config/appliances/binance-shit-signal.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8395,
						"regions":
						{
						},
						"selection":
						[
							[
								1538,
								1538
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "trader/connector/kraken/trader.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16012,
						"regions":
						{
						},
						"selection":
						[
							[
								14591,
								14591
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6067.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16430,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										266,
										271
									],
									[
										597,
										602
									],
									[
										648,
										653
									],
									[
										705,
										710
									],
									[
										959,
										964
									],
									[
										1002,
										1007
									],
									[
										1051,
										1056
									],
									[
										1327,
										1332
									],
									[
										1561,
										1566
									],
									[
										1794,
										1799
									],
									[
										2027,
										2032
									],
									[
										2260,
										2265
									],
									[
										2478,
										2483
									],
									[
										2797,
										2802
									],
									[
										3107,
										3112
									],
									[
										3409,
										3414
									],
									[
										3719,
										3724
									],
									[
										3905,
										3910
									],
									[
										4195,
										4200
									],
									[
										4328,
										4333
									],
									[
										4508,
										4513
									],
									[
										4686,
										4691
									],
									[
										4855,
										4860
									],
									[
										5115,
										5120
									],
									[
										5284,
										5289
									],
									[
										5568,
										5573
									],
									[
										5910,
										5915
									],
									[
										6128,
										6133
									],
									[
										6284,
										6289
									],
									[
										6351,
										6356
									],
									[
										6528,
										6533
									],
									[
										6785,
										6790
									],
									[
										7049,
										7054
									],
									[
										7356,
										7361
									],
									[
										7699,
										7704
									],
									[
										8085,
										8090
									],
									[
										8239,
										8244
									],
									[
										8470,
										8475
									],
									[
										8511,
										8516
									],
									[
										8937,
										8942
									],
									[
										9298,
										9303
									],
									[
										9312,
										9317
									],
									[
										9422,
										9427
									],
									[
										9438,
										9443
									],
									[
										9642,
										9647
									],
									[
										9920,
										9925
									],
									[
										10013,
										10018
									],
									[
										10228,
										10233
									],
									[
										10505,
										10510
									],
									[
										10566,
										10571
									],
									[
										10644,
										10649
									],
									[
										10887,
										10892
									],
									[
										11288,
										11293
									],
									[
										11617,
										11622
									],
									[
										11691,
										11696
									],
									[
										11962,
										11967
									],
									[
										12150,
										12155
									],
									[
										12423,
										12428
									],
									[
										12581,
										12586
									],
									[
										12868,
										12873
									],
									[
										12986,
										12991
									],
									[
										13279,
										13284
									],
									[
										13488,
										13493
									],
									[
										13784,
										13789
									],
									[
										13885,
										13890
									],
									[
										13933,
										13938
									],
									[
										14067,
										14072
									],
									[
										14207,
										14212
									],
									[
										14373,
										14378
									],
									[
										14402,
										14407
									],
									[
										14600,
										14605
									],
									[
										14856,
										14861
									],
									[
										14935,
										14940
									],
									[
										15007,
										15012
									],
									[
										15081,
										15086
									],
									[
										15270,
										15275
									],
									[
										15634,
										15642
									],
									[
										15889,
										15897
									],
									[
										16298,
										16309
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								15995,
								15995
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 6000.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "trader/connector/binance/trader.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47412,
						"regions":
						{
						},
						"selection":
						[
							[
								3745,
								3745
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1207.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "watcher/connector/kraken/watcher.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22751,
						"regions":
						{
						},
						"selection":
						[
							[
								3297,
								3297
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "strategy/bourricot/bourricotatrsr.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1060,
						"regions":
						{
						},
						"selection":
						[
							[
								1060,
								1060
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/frederic/.siis/config/appliances/binance-bourricot-backtesting.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8372,
						"regions":
						{
						},
						"selection":
						[
							[
								603,
								603
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/frederic/.siis/config/appliances/kraken-eur-margin.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8738,
						"regions":
						{
						},
						"selection":
						[
							[
								6924,
								6924
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1267.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "strategy/strategytrade.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36342,
						"regions":
						{
						},
						"selection":
						[
							[
								8730,
								8730
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3787.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/home/frederic/.siis/config/appliances/app-histdata-dax30-v01.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7755,
						"regions":
						{
						},
						"selection":
						[
							[
								759,
								759
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/home/frederic/.siis/config/appliances/app-ig-dax30-v01.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7700,
						"regions":
						{
						},
						"selection":
						[
							[
								7700,
								7700
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 982.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.anaconda_documentation":
	{
		"height": 112.0
	},
	"output.exec":
	{
		"height": 287.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"output.rope_python_documentation":
	{
		"height": 112.0
	},
	"pinned_build_system": "",
	"project": "siis.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"accou bin",
				"trader/connector/binance/account.py"
			],
			[
				"accou",
				"trader/connector/bitmex/account.py"
			],
			[
				"ass",
				"trader/asset.py"
			],
			[
				"asset",
				"trader/asset.py"
			],
			[
				"krak wet",
				"watcher/connector/kraken/watcher.py"
			],
			[
				"as",
				"trader/asset.py"
			],
			[
				"bintra",
				"trader/connector/binance/trader.py"
			],
			[
				"kra",
				"config/watchers/kraken.com.json"
			],
			[
				"trader bin",
				"trader/connector/binance/trader.py"
			],
			[
				"acc",
				"trader/account.py"
			],
			[
				"trad",
				"trader/trader.py"
			],
			[
				"trader ig",
				"trader/connector/ig/trader.py"
			],
			[
				"ig wat",
				"watcher/connector/ig/watcher.py"
			],
			[
				"sign",
				"common/signal.py"
			],
			[
				"sig",
				"view/signalview.py"
			],
			[
				"account bitm",
				"trader/connector/bitmex/account.py"
			],
			[
				"account bi",
				"trader/connector/binance/account.py"
			],
			[
				"account ig",
				"trader/connector/ig/account.py"
			],
			[
				"bit accoun",
				"trader/connector/bitmex/account.py"
			],
			[
				"acco",
				"trader/account.py"
			],
			[
				"accou ig",
				"trader/connector/ig/account.py"
			],
			[
				"trader",
				"trader/trader.py"
			],
			[
				"acc kr",
				"trader/connector/kraken/account.py"
			],
			[
				"wat kr",
				"watcher/connector/kraken/watcher.py"
			],
			[
				"client b",
				"connector/binance/client.py"
			],
			[
				"ytrader",
				"strategy/strategytrader.py"
			],
			[
				"str",
				"strategy/strategy.py"
			],
			[
				"trader bit",
				"trader/connector/bitmex/trader.py"
			],
			[
				"bin tra",
				"trader/connector/binance/trader.py"
			],
			[
				"order",
				"trader/order.py"
			],
			[
				"ord",
				"trader/order.py"
			],
			[
				"orde",
				"trader/order.py"
			],
			[
				"",
				"trader/connector/kraken/trader.py"
			],
			[
				"account kr",
				"trader/connector/kraken/account.py"
			],
			[
				"accoun",
				"trader/connector/binance/account.py"
			],
			[
				"util",
				"common/utils.py"
			],
			[
				"market",
				"trader/market.py"
			],
			[
				"trader kr",
				"trader/connector/kraken/trader.py"
			],
			[
				"shit",
				"~/.siis/config/appliances/binance-shit-signal.json"
			],
			[
				"watc bit",
				"watcher/connector/bitmex/watcher.py"
			],
			[
				"runn",
				"common/runnable.py"
			],
			[
				"trader bi",
				"trader/connector/binance/trader.py"
			],
			[
				"ytr",
				"strategy/strategytrade.py"
			],
			[
				"strat",
				"strategy/strategy.py"
			],
			[
				"serv tr",
				"trader/service.py"
			],
			[
				"servi wa",
				"watcher/service.py"
			],
			[
				"watc bin",
				"watcher/connector/binance/watcher.py"
			],
			[
				"watch kr",
				"watcher/connector/kraken/watcher.py"
			],
			[
				"watch bin",
				"watcher/connector/binance/watcher.py"
			],
			[
				"trader b",
				"trader/connector/binance/trader.py"
			],
			[
				"krak j",
				"config/watchers/kraken.com.json"
			],
			[
				"watc kra",
				"watcher/connector/kraken/watcher.py"
			],
			[
				"wat bin",
				"watcher/connector/binance/watcher.py"
			],
			[
				"watc",
				"watcher/watcher.py"
			],
			[
				"watcher kr",
				"watcher/connector/kraken/watcher.py"
			],
			[
				"bourst",
				"strategy/bourricot/bourricotstrategytrader.py"
			],
			[
				"ig tra",
				"trader/connector/ig/trader.py"
			],
			[
				"ytra",
				"strategy/strategytrade.py"
			],
			[
				"assettr",
				"strategy/strategyassettrade.py"
			],
			[
				"data",
				"database/database.py"
			],
			[
				"conn",
				"connector/binance/connector.py"
			],
			[
				"clie",
				"connector/binance/client.py"
			],
			[
				"stra",
				"strategy/strategy.py"
			],
			[
				"boutst",
				"strategy/bourricot/bourricotstrategy.py"
			],
			[
				"bouyt",
				"strategy/bourricot/bourricotstrategytrader.py"
			],
			[
				"bouatr",
				"strategy/bourricot/bourricotatrsr.py"
			],
			[
				"siislog",
				"common/siislog.py"
			],
			[
				"pul",
				"strategy/bourricot/pullbackppbbmax.py"
			],
			[
				"pmax",
				"strategy/bourricot/pullbackppbbmax.py"
			],
			[
				"boup",
				"strategy/bourricot/bourricotparameters.py"
			],
			[
				"atrs",
				"strategy/indicator/atrsr/atrsr.py"
			],
			[
				"discno",
				"notifier/discord/discordnotifier.py"
			],
			[
				"andr",
				"notifier/android/androidnotifier.py"
			],
			[
				"signv",
				"view/signalview.py"
			],
			[
				"andro",
				"notifier/android/androidnotifier.py"
			],
			[
				"dis",
				"notifier/discord/discordnotifier.py"
			],
			[
				"ter",
				"terminal/terminal.py"
			],
			[
				"charm",
				"terminal/charmap.py"
			],
			[
				"desk",
				"notifier/desktop/desktopnotifier.py"
			],
			[
				"disno",
				"notifier/discord/discordnotifier.py"
			],
			[
				"and",
				"notifier/android/androidnotifier.py"
			],
			[
				"siis",
				"siis.py"
			],
			[
				"androino",
				"notifier/android/androidnotifier.py"
			],
			[
				"andrno",
				"config/notifiers/android.json"
			],
			[
				"deskj",
				"config/notifiers/desktop.json"
			],
			[
				"deskjs",
				"config/notifiers/desktop.json"
			],
			[
				"deskn",
				"notifier/desktop/desktopnotifier.py"
			],
			[
				"signvi",
				"view/signalview.py"
			],
			[
				"deskno",
				"notifier/desktop/desktopnotifier.py"
			],
			[
				"ytrad",
				"strategy/strategytrade.py"
			],
			[
				"ysig",
				"strategy/strategysignal.py"
			],
			[
				"ysi",
				"strategy/strategysignal.py"
			],
			[
				"trapos",
				"strategy/strategypositiontrade.py"
			],
			[
				"margi",
				"strategy/strategymargintrade.py"
			],
			[
				"indmar",
				"strategy/strategyindmargintrade.py"
			],
			[
				"indm",
				"doc/indicator.md"
			],
			[
				"assett",
				"strategy/strategyassettrade.py"
			],
			[
				"ysg",
				"strategy/strategysignal.py"
			],
			[
				"strategtrader",
				"strategy/strategytrader.py"
			],
			[
				"signalvi",
				"view/signalview.py"
			],
			[
				"utils",
				"common/utils.py"
			],
			[
				"timef",
				"strategy/timeframebasedstrategytrader.py"
			],
			[
				"ser no",
				"notifier/service.py"
			],
			[
				"des",
				"notifier/desktop/desktopnotifier.py"
			],
			[
				"boura",
				"strategy/bourricot/bourricotatrsr.py"
			],
			[
				"atr",
				"strategy/indicator/atr/atr.py"
			],
			[
				"boucon",
				"strategy/bourricot/bourricotconfig.py"
			],
			[
				"bousttr",
				"strategy/bourricot/bourricotstrategytrader.py"
			],
			[
				"stytra",
				"strategy/strategytrade.py"
			],
			[
				"boustr",
				"strategy/bourricot/bourricotstrategytrader.py"
			],
			[
				"boupar",
				"strategy/bourricot/bourricotparameters.py"
			],
			[
				"bousub",
				"strategy/bourricot/bourricotsuba.py"
			],
			[
				"ytrade",
				"strategy/strategytrader.py"
			],
			[
				"serv",
				"watcher/service.py"
			],
			[
				"mar",
				"trader/market.py"
			],
			[
				"strateg",
				"strategy/strategy.py"
			],
			[
				"ser str",
				"strategy/strategytrader.py"
			],
			[
				"watcher ig",
				"watcher/connector/ig/watcher.py"
			],
			[
				"instr",
				"instrument/instrument.py"
			],
			[
				"pos",
				"trader/position.py"
			],
			[
				"posi",
				"trader/position.py"
			],
			[
				"trader.py",
				"trader/trader.py"
			],
			[
				"order vie",
				"view/orderview.py"
			],
			[
				"tradincom",
				"app/tradingcommands.py"
			],
			[
				"stra js",
				"config/strategies.json"
			],
			[
				"strat jo",
				"config/strategies.json"
			],
			[
				"trader pa",
				"trader/connector/papertrader/trader.py"
			],
			[
				"inst",
				"instrument/instrument.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/dev/plantpad/master/plantpad.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Affix"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 280.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
